<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<!-- 매퍼XML -->
	<!-- 원래 인터페이스에 있던 쿼리문을 분리해서 여기로 이동 -->
	<!-- 내가 참조하는 인터페이스 경로와 이름 설정 -->
	<mapper namespace="com.javalab.mybatis.mapper.BoardMapperInterface">
	
		<!-- 쿼리메소드
			id="getBoard" : 메소드의 이름으로 인터페이스에 있는 추상메소드와 같아야 한다.
			resultType="BoardVo" : 쿼리 실행 결과를 담아줄 vo 클래스를 지정한다. 
				BoardVo 별칭은 sqlMapConfig.xml에 정의되어 있다.		
			#{bno} : 쿼리문에 전달될 파라미터로 매퍼인터페이스의 메소드 파라미터 이름과 같아야 한다. 
			PrepardStatement의 ?표와 같은 역할을 한다. -->
			
		<!-- 조회수 증가 -->
		<update id="incrementHitNo" parameterType="int">
			update board
			set hit_no = hit_no + 1 as hitNo
			where bno = #{bno}
		</update>
		
		<select id="getBoard" resultType="BoardVo">
			select bno, 
				title, 
				content, 
				member_id as memberId, 
				reg_date as regDate,
				hit_no as hitNo
			from board 
			where bno = #{bno}
		</select>
		
		<!-- 게시물 목록 조회 쿼리 메소드 -->
		<select id="getBoardList" resultType="BoardVo">
			select bno,
					title,
					member_id as memberId,
					reg_date as regDate,
					hit_no as hitNo
			from board
			order by reg_date desc					
		</select>
		
		<!-- 게시물 등록 메소드 -->
		<insert id="insertBoard" parameterType="BoardVo">
			insert into board(
				bno,
				title, 
				content, 
				member_id, 
				reg_date, 
				hit_no)
			values (
				seq_board.nextval,
				#{title}, 
				#{content}, 
				#{memberId}, 
				sysdate, 
				0)				
		</insert>
		
		<!-- 게시물 수정 메소드 -->
		<update id="updateBoard" parameterType="BoardVo">
			update board
			set title = #{title},
				content = #{content}
			where bno = #{bno}
		</update>

		<!-- 게시물 삭제 메소드 -->
		<delete id="deleteBoard" parameterType="int">
			delete from board
			where bno = #{bno}
		</delete>
	</mapper>	